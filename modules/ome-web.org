#+TITLE: Oh My Emacs Web
#+OPTIONS: toc:2 num:nil ^:nil

This is part of the [[https://github.com/xiaohanyu/oh-my-emacs][oh-my-emacs]].

This module contains some packages for web development in Emacs.

Web development is really a huge topic. There're dozens of [[http://en.wikipedia.org/wiki/Web_template_system][web template
systems]], hundreds of [[http://en.wikipedia.org/wiki/Web_application_framework][web frameworks]], different ways, different standards, which
makes it a dirty work to support web development in Emacs. For serious work, I
recommand [[http://www.jetbrains.com/webstorm/][WebStorm]] from [[http://www.jetbrains.com/][JetBrains]]. "Hmm, you're a traitor of Emacs", you may
say. Actually, that depends. I prefer proper tools for proper works. Emacs is
not a one-for-all solution. For example, webstorm has really great semantic
completion for JavaScript, together with a deep [[http://www.jetbrains.com/webstorm/features/index.html][understanding]] of web standards,
and tricks such as incompatibilies between different browsers. As we all know,
the browser compatilibity is one of the biggest nightmares of modern software
engineer, so it's hard for Emacs, an editor, to compete with WebStorm.

Ah, seems I'm a salesman from JetBrains. That's not bad. So why I still use
Emacs, at least some times? Actually, for small project, I still prefer Emacs
over huge IDEs, there're several reasons:
- Though Emacs with packages(such as oh-my-emacs) may be slower than vim, it is
  still faster than Java based IDEs.
- Though you lost some great features provide by modern IDE, you have all Emacs
  goodies at your fingertips. For example, you can switch buffers quickly, view
  man pages as you like, view info document for GNU software, fire up eshell to
  do some dirty work quickly.
- You do not need to create workspace, create project in advance when you just
  want to create some tiny test file.

Enough, now it's the time to see what Emacs provides for you to do basic web
development.
